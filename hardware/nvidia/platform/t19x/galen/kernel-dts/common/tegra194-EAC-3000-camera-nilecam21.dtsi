/* Econ device tree for AR0233 support */

#include "dt-bindings/clock/tegra194-clock.h"

#define CAM0_PWDN	TEGRA194_MAIN_GPIO(H, 6)
#define CAM1_PWDN	TEGRA194_MAIN_GPIO(T, 5)
#define CAM2_PWDN	TEGRA194_MAIN_GPIO(H, 3)
#define CAM3_PWDN	TEGRA194_MAIN_GPIO(T, 6)
#define CAM_PWM	TEGRA194_MAIN_GPIO(P, 5)
#define CAM_I2C_MUX 	TEGRA194_AON_GPIO(CC, 3)
#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)

#define CAM_LANES 4
#define CAM_LANES_STRING "4"

/ {
	gpio@2200000 {
		camera-control-0_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM0_PWDN 0>;
                        output-high;
                        label = "cam0-pwdn";
                };
		camera-control-1_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM1_PWDN 0>;
                        output-high;
                        label = "cam1-pwdn";
                };
		camera-control-2_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM2_PWDN 0>;
                        output-high;
                        label = "cam2-pwdn";
                };
		camera-control-3_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM3_PWDN 0>;
                        output-high;
                        label = "cam3-pwdn";
                };
		camera-control-4_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM_PWM 0>;
                        output-high;
                        label = "cam-pwm";
                };
	};
     
    // all cameras are disabled by default 
     capture_vi_base: tegra-capture-vi  {
			num-channels = <8>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					status = "okay";
					ecam_vi_in0: endpoint {
						status = "okay";
						vc-id = <1>;
						port-index = <0>;
						bus-width = <CAM_LANES>;
						remote-endpoint = <&ecam_csi_out0>;
					};
				};
				port@1 {
                                        reg = <1>;
					status = "okay";
                                        ecam_vi_in1: endpoint {
						status = "okay";
						vc-id = <0>;
                                                port-index = <0>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out1>;
                                        };
                                };
                                port@2 {
                                        reg = <2>;
					status = "okay";
                                        ecam_vi_in2: endpoint {
						status = "okay";
						vc-id = <1>;
                                                port-index = <2>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out2>;
                                        };
                                };
				port@3 {
                                        reg = <3>;
					status = "okay";
                                        ecam_vi_in3: endpoint {
						status = "okay";
						vc-id = <0>;
                                                port-index = <2>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out3>;
                                        };
                                };
				port@4 {
                                        reg = <4>;
					status = "okay";
                                        ecam_vi_in4: endpoint {
						status = "okay";
						vc-id = <1>;
                                                port-index = <4>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out4>;
                                        };
                                };
				port@5 {
                                        reg = <5>;
					 status = "okay";
                                        ecam_vi_in5: endpoint {
						status = "okay";
						vc-id = <0>;
                                                port-index = <4>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out5>;
                                        };
                                };
				port@6 {
                                        reg = <6>;
					status = "okay";
                                        ecam_vi_in6: endpoint {
						status = "okay";
						//vc-id = <1>;
                                                port-index = <5>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out6>;
                                        };
                                };
				port@7 {
                                        reg = <7>;
					status = "okay";
                                        ecam_vi_in7: endpoint {
						status = "okay";
						vc-id = <0>;
                                                port-index = <5>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out7>;
                                        };
                                };

			};
		};

	host1x@13e00000 {

		nvcsi@15a00000 {
			num-channels = <8>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
	    		channel@0 {
				reg = <0>;
				status = "okay";
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";
						ecam_csi_in0: endpoint@0 {
							status = "okay";
							port-index = <0>;
							bus-width = <CAM_LANES>;
							remote-endpoint = <&ecam_ar0233_out0>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";
						ecam_csi_out0: endpoint@1 {
							status = "okay";
							remote-endpoint = <&ecam_vi_in0>;
						};
					};
				};
			};
                        channel@1 {
                                reg = <1>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in1: endpoint@2 {
							status = "okay";
                                                        port-index = <0>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0233_out1>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out1: endpoint@3 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in1>;
                                                };
                                        };
                                };
                        };
                        channel@2 {
                                reg = <2>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in2: endpoint@4 {
							status = "okay";
                                                        port-index = <2>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0233_out2>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out2: endpoint@5 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in2>;
                                                };
                                        };
                                };
                        };
			channel@3 {
                                reg = <3>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in3: endpoint@6 {
							status = "okay";
                                                        port-index = <2>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0233_out3>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out3: endpoint@7 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in3>;
                                                };
                                        };
                                };
                        };
			channel@4 {
                                reg = <4>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in4: endpoint@8 {
							status = "okay";
                                                        port-index = <4>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0233_out4>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out4: endpoint@9 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in4>;
                                                };
                                        };
                                };
                        };
			channel@5 {
				reg = <5>;
				status = "okay";
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";
						ecam_csi_in5: endpoint@10 {
							status = "okay";
							port-index = <4>;
							bus-width = <CAM_LANES>;
							remote-endpoint = <&ecam_ar0233_out5>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";
						ecam_csi_out5: endpoint@11 {
							status = "okay";
							remote-endpoint = <&ecam_vi_in5>;
						};
					};
				};
			};
			channel@6 {
				reg = <6>;
				status = "okay";
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";
						ecam_csi_in6: endpoint@12 {
							status = "okay";
							port-index = <6>;
							bus-width = <CAM_LANES>;
							remote-endpoint = <&ecam_ar0233_out6>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";
						ecam_csi_out6: endpoint@13 {
							status = "okay";
							remote-endpoint = <&ecam_vi_in6>;
						};
					};
				};
			};
			channel@7 {
				reg = <7>;
				status = "okay";
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";
						ecam_csi_in7: endpoint@14 {
							status = "okay";
							port-index = <6>;
							bus-width = <CAM_LANES>;
							remote-endpoint = <&ecam_ar0233_out7>;
						};
					};
					port@1 {
						reg = <1>;	
						status = "okay";
						ecam_csi_out7: endpoint@15 {
							status = "okay";
							remote-endpoint = <&ecam_vi_in7>;
						};
					};
				};
			};

		};
	};

	fixed-regulators {
			p2822_vdd_1v8_cvb: regulator@102 {
					regulator-always-on;
			};
	};


	i2c@3180000 {
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		tca9543@72 {
			compatible = "nxp,pca9543";
			reg = <0x72>;
			#address-cells = <1>;
			#size-cells = <0>;
			vif-supply = <&p2822_vdd_1v8_cvb>;
			vcc-supply = <&p2822_vdd_1v8_cvb>;
			skip_mux_detect;
			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
			i2c@0 {
				reg = <0>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0233_a@43 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x43>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;
					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "A";
#define VC_ID "1"				
#define TEGRA_SINTERFACE "serial_a"
#include "nilecam21_cuxvr_mode.dtsi"
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out0: endpoint {
								vc-id = <1>;
								port-index = <0>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in0>;
								};
							};
						};
					};
				ar0233_b@44 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x44>;
					//reg_mux = <0>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
				        //reset-gpios = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>; 
					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "B";
#undef VC_ID
#define VC_ID "0"		
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_a"
#include "nilecam21_cuxvr_mode.dtsi"
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out1: endpoint {
								vc-id = <0>;
								port-index = <0>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in1>;
								};
							};
						};
					};
				};

			i2c@1 {
				reg = <1>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0233_c@43 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x43>;
					//reg_mux = <1>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "A";
#undef VC_ID
#define VC_ID "1"	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_c"
#include "nilecam21_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out2: endpoint {
								vc-id = <1>;
								port-index = <2>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in2>;
								};
							};
						};
				};
				ar0233_d@44 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x44>;
					//reg_mux = <1>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "true";
					camera_mipi_lanes = <2>;	
					sio-port = "B";
#undef VC_ID
#define VC_ID "0"	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_c"
#include "nilecam21_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out3: endpoint {
								vc-id = <0>;
								port-index = <2>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in3>;
								};
							};
						};
					};
				};
			};
		tca9543@73 {
			compatible = "nxp,pca9543";
			reg = <0x73>;
			#address-cells = <1>;
			#size-cells = <0>;
			skip_mux_detect;
			vif-supply = <&p2822_vdd_1v8_cvb>;
			vcc-supply = <&p2822_vdd_1v8_cvb>;
			vcc_lp = "vcc";
			force_bus_start = <CAMERA_I2C_MUX_BUS(2)>;
			i2c@0 {
				reg = <0>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0233_e@43 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x43>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM2_PWDN GPIO_ACTIVE_HIGH>;
 					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "A";
#undef VC_ID
#define VC_ID "1"	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_e"
#include "nilecam21_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out4: endpoint {
								vc-id = <1>;
								port-index = <4>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in4>;
								};
							};
						};
					};
				ar0233_f@44 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x44>;
					//reg_mux = <2>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM2_PWDN GPIO_ACTIVE_HIGH>;
					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "B";
#undef VC_ID
#define VC_ID "0"	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_e"
#include "nilecam21_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out5: endpoint {
								vc-id = <0>;
								port-index = <4>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in5>;
								};
							};
						};
					};
				};
				i2c@1 {
				reg = <1>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0233_g@43 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x43>;
					//reg_mux = <3>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM3_PWDN GPIO_ACTIVE_HIGH>;
 					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "A";
#undef VC_ID
#define VC_ID "1"	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_g"
#include "nilecam21_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out6: endpoint {
								vc-id = <1>;
								port-index = <6>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in6>;
								};
							};
						};
					};
				ar0233_h@44 {
					status = "okay";
					compatible = "nvidia,ar0233";
					reg = <0x44>;
					//reg_mux = <3>;
					sensor_model ="ar0233";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1",  "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					//reset-gpios = <&tegra_main_gpio CAM3_PWDN GPIO_ACTIVE_HIGH>;
					vana-supply = <&p2822_avdd_cam_2v8>;
					vif-supply = <&p2822_vdd_1v8_cvb>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "B";
#undef VC_ID
#define VC_ID "0"	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_g"
#include "nilecam21_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0233_out7: endpoint {
								vc-id = <0>;
								port-index = <6>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in7>;
								};
							};
						};
					};
				};
			};
		};
	};
/ {
	tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		* max_pixel_rate = <>;
		* Max pixel rate in Kpixel/s for the ISP ISO case
		*
		* isp_peak_byte_per_pixel = <>;
		* Max byte per pixel for the ISP ISO case
		*
		* isp_bw_margin_pct = <>;
		* Isp bandwidth margin in percentage
		*/
		num_csi_lanes = <8>;
		max_lane_speed = <2500000>;
		min_bits_per_pixel = <16>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <67>;
		max_pixel_rate = <750000>;
		isp_peak_byte_per_pixel = <5>;
		isp_bw_margin_pct = <25>;

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. "rear" or "front".
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vender.
		 */
		modules {

			module0 {
				badge = "NileCAM21_CUXVR-1";
				position = "rear";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 30-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@0/ar0233_a@43";
					status = "okay";
};
			};

			module1 {
				badge = "NileCAM21_CUXVR-2";
				position = "front";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 30-0044";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@0/ar0233_b@44";
					status = "okay";
};
			};

			module2 {
				badge = "NileCAM21_CUXVR-3";
				position = "topright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 31-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@1/ar0233_c@43";
					status = "okay";
};
			};

			module3 {
				badge = "NileCAM21_CUXVR-4";
				position = "bottomright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 31-0044";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@1/ar0233_d@44";
					status = "okay";
};
			};
			module4 {
				badge = "NileCAM21_CUXVR-5";
				position = "topleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 32-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@0/ar0233_e@43";
					status = "okay";
};
			};

			module5 {
				badge = "NileCAM21_CUXVR-6";
				position = "centerright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 32-0044";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@0/ar0233_f@44";
					status = "okay";
};
			};
			module6 {
				badge = "NileCAM21_CUXVR-7";
				position = "centerleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 33-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@1/ar0233_g@43";
				status = "okay";
};
			};

			module7 {
				badge = "NileCAM21_CUXVR-8";
				position = "bottomleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0233 33-0044";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@1/ar0233_h@44";
					status = "okay";
};
			};
                 };
	};
};
			
		

				

			

				



